# 20/10/16
RUNTIME STRUCTURE
Stacked
    Stack{
        Register{
            locals,
            constants,
            funcs
        }
    }
Heaped
    Globals{
        globalObjects,
        outerObjects
    }
    FuncMap::Map{
        index,
        vectorOfFunctions
    }
    Function{
        numberOfArgs,
        vectorOfObjects,
        vectorOfAttachedFunctions
    }
    TypeMap::Map{
        index,
        size,
        vectorOfParentTypes 
    }
    Instructions1{
        programPositionIndex,
        vectorOfInstructions
    }

ANY
- Primitive Objects
- Complex Objects
- Maps
- Buffers

STRUCTURES
    PrimitiveObjectX{
        type,
        refCount,
        value
    }
    AnySizedComplexObject{
        type,
        size|isBuffered,
        refCount,
        [
            primitiveObject,
            *mapPtr,
            *anyPtr,
            buffer
            ...
        ]
    }
    BufferedComplexObject{
        type,
        size|isBuffered,
        refCount,
        buffer
    }
    Buffer{
        type,
        size,
        *anyPtr[]
    }
    Map{
        type,
        size,
        refCount,
        [
            hash,
            hash,
            ...
        ]
    }
    Hash{
        *anyPtr,
        buffer
    }
    Stack{
        [
            *anyPtr,
            primitiveObject  #=CONSTANTS=#,
            ...
        ]
    }
    Global{
        [
            *anyPtr,
            primitiveObject #=CONSTANTS=#,
            ...
        ]
    }

MAP

BASIC INSTRUCTIONS (25)
- add, sub, mul, div, mod
- padd, psub, pmul, pdiv, pmod
- unm
- eq, neq, lt, le, gt, ge
- peq, pneq, plt, ple, pgt, pge
- bnot, bor, band, bxor
- jmp
- loadbool
- mov, pmov
- forloop
- call
- end
- rt

OPERATIONS
- i64 for signed integer ops
- u64 for unsigned integer ops
- f64 for floating point ops

FUNCTION LOADING
- globals
- locals
- constants
- outerObjects

PRIMITIVE OBJECTS
- bool
- int, i8, i16, i32, i64, uint, u8, u16, u32, u64
- f32, f64
- c64, c126
- buffer

PACKAGED OBJECTS (??)
- strings -> byte_size, ascii_flag + cp_length, UTF-8
- chars -> byte_size, UTF-32
- lists
- objects


OPTIMISATIONS
- type inference
- constant folding


FUTURE OPTIMISATIONS
- Allocating and Managing Heap Buckets
