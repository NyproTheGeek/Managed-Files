# 20/10/16
RUNTIME STRUCTURE
Stack
    Stack{
        Register{
            locals,
            globals,
            constants
        },
        CodeFragment
    }
Heap
    Globals{
        globalObjects,
        outerObjects
    }
    FuncMap::Map{
        index,
        bufferOfFunctions
    }
    Function{
        masterTypeIndex,
        bufferOfObjects
    }
    TypeMap::Map{
        index,
        bufferOfParentTypes
    }
    CodeSegment{
        size,
        bufferOfInstructions
    }

BASIC INSTRUCTIONS
- add, sub, mul, div, mod
- unm
- eq, neq, lt, le, gt, ge
- bnot, bor, band, bxor
- jmp
- rt
- loadk
- loadbool
- move
- forloop
- call

FUNCTION LOADING
- globals
- locals
- constants
- outerObjects

PRIMITIVE OBJECTS
- bool
- int, i8, i16, i32, i64, uint, u8, u16, u32, u64
- f32, f64
- c64, c126
- buffer

PACKAGED OBJECTS (??)
- strings -> byte_size, ascii_flag + cp_length, UTF-8
- chars -> byte_size, UTF-32
- lists
- objects

MAP
- Hash Part | List Part
    Map{
        size,
        bufferOfHashes,
    }
    Hash{
        ptrToList,
        ptrToVal,
    }
    List{
        size,
        bufferOfRLE,
        bufferOfPointers,
    }
    Buffer{

    }
