// Generated from bang.g4 by ANTLR 4.5.3
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BangLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		DSP=1, KSP=2, NL=3, IDEN=4, A_NUM=5, B_NUM=6, STRING=7, NS_STRING=8, REGEX=9, 
		SYMBOL=10, NS_SYMBOL=11, ML_COMMENT=12, NUM=13, LIT=14, REF=15, MOD0=16, 
		STICKY=17, HOLD=18, ASS=19, ASS0=20, VAR=21, LET=22, FUNC=23, MOD=24, 
		TYPE=25, AB=26, MODULE=27, ENUM=28, LOOP=29, WHILE=30, IF=31, FOR=32, 
		TRY=33, CATCH=34, OP_PAREN=35, CL_PAREN=36, OP_BRACE=37, CL_BRACE=38, 
		OP_CURLY_BRACE=39, CL_CURLY_BRACE=40, COLON=41, SEMICOLON=42, EXC_MARK=43, 
		QUES_MARK=44, COMMA=45, DOLLAR=46, EQUAL=47, PLUS=48, MINUS=49, MUL=50, 
		DIV=51, HAT=52, D_BAR=53;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"DSP", "KSP", "NL", "IDEN", "A_NUM", "B_NUM", "STRING", "NS_STRING", "REGEX", 
		"SYMBOL", "NS_SYMBOL", "ML_COMMENT", "NUM", "LIT", "REF", "MOD0", "STICKY", 
		"HOLD", "ASS", "ASS0", "VAR", "LET", "FUNC", "MOD", "TYPE", "AB", "MODULE", 
		"ENUM", "LOOP", "WHILE", "IF", "FOR", "TRY", "CATCH", "OP_PAREN", "CL_PAREN", 
		"OP_BRACE", "CL_BRACE", "OP_CURLY_BRACE", "CL_CURLY_BRACE", "COLON", "SEMICOLON", 
		"EXC_MARK", "QUES_MARK", "COMMA", "DOLLAR", "EQUAL", "PLUS", "MINUS", 
		"MUL", "DIV", "HAT", "D_BAR"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, "'sticky'", "'hold'", null, null, null, 
		"'let'", null, null, "'type'", "'ab'", "'module'", "'enum'", "'loop'", 
		"'while'", "'if'", "'for'", "'try'", "'catch'", "'('", "')'", "'['", "']'", 
		"'{'", "'}'", "':'", "';'", "'!'", "'?'", "','", "'$'", "'='", "'+'", 
		"'-'", null, null, "'^'", "'||'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "DSP", "KSP", "NL", "IDEN", "A_NUM", "B_NUM", "STRING", "NS_STRING", 
		"REGEX", "SYMBOL", "NS_SYMBOL", "ML_COMMENT", "NUM", "LIT", "REF", "MOD0", 
		"STICKY", "HOLD", "ASS", "ASS0", "VAR", "LET", "FUNC", "MOD", "TYPE", 
		"AB", "MODULE", "ENUM", "LOOP", "WHILE", "IF", "FOR", "TRY", "CATCH", 
		"OP_PAREN", "CL_PAREN", "OP_BRACE", "CL_BRACE", "OP_CURLY_BRACE", "CL_CURLY_BRACE", 
		"COLON", "SEMICOLON", "EXC_MARK", "QUES_MARK", "COMMA", "DOLLAR", "EQUAL", 
		"PLUS", "MINUS", "MUL", "DIV", "HAT", "D_BAR"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public BangLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "bang.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\67\u01ca\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\4\5\4w\n\4"+
		"\3\4\6\4z\n\4\r\4\16\4{\3\5\3\5\7\5\u0080\n\5\f\5\16\5\u0083\13\5\3\6"+
		"\5\6\u0086\n\6\3\6\3\6\5\6\u008a\n\6\3\6\7\6\u008d\n\6\f\6\16\6\u0090"+
		"\13\6\3\6\3\6\5\6\u0094\n\6\3\6\6\6\u0097\n\6\r\6\16\6\u0098\5\6\u009b"+
		"\n\6\3\6\3\6\3\6\7\6\u00a0\n\6\f\6\16\6\u00a3\13\6\5\6\u00a5\n\6\3\6\3"+
		"\6\3\6\7\6\u00aa\n\6\f\6\16\6\u00ad\13\6\5\6\u00af\n\6\3\7\5\7\u00b2\n"+
		"\7\3\7\3\7\5\7\u00b6\n\7\3\7\7\7\u00b9\n\7\f\7\16\7\u00bc\13\7\5\7\u00be"+
		"\n\7\3\7\3\7\3\7\5\7\u00c3\n\7\3\7\7\7\u00c6\n\7\f\7\16\7\u00c9\13\7\3"+
		"\7\3\7\5\7\u00cd\n\7\3\7\6\7\u00d0\n\7\r\7\16\7\u00d1\5\7\u00d4\n\7\3"+
		"\7\3\7\3\7\7\7\u00d9\n\7\f\7\16\7\u00dc\13\7\5\7\u00de\n\7\3\b\3\b\3\b"+
		"\3\t\3\t\7\t\u00e5\n\t\f\t\16\t\u00e8\13\t\3\t\3\t\3\t\3\n\3\n\3\13\3"+
		"\13\3\f\3\f\3\r\3\r\3\r\3\r\7\r\u00f7\n\r\f\r\16\r\u00fa\13\r\3\r\3\r"+
		"\7\r\u00fe\n\r\f\r\16\r\u0101\13\r\3\16\3\16\5\16\u0105\n\16\3\17\3\17"+
		"\3\17\3\17\5\17\u010b\n\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20"+
		"\3\20\3\20\3\20\3\20\5\20\u011a\n\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\5\21\u0137\n\21\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\5\24\u0149\n\24"+
		"\3\25\3\25\3\25\3\25\3\25\3\25\5\25\u0151\n\25\3\26\3\26\3\26\3\26\5\26"+
		"\u0157\n\26\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\5\30\u0166\n\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31"+
		"\5\31\u0172\n\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3"+
		"#\3#\3#\3#\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,"+
		"\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64"+
		"\3\65\3\65\3\66\3\66\3\66\3\u00ff\2\67\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21"+
		"\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30"+
		"/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.["+
		"/]\60_\61a\62c\63e\64g\65i\66k\67\3\2\b\5\2\"\"^^vv\4\2C\\c|\5\2C\\aa"+
		"c|\4\2--//\3\2\62;\5\2\62;C\\c|\u01f8\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2"+
		"\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2"+
		"\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3"+
		"\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3"+
		"\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65"+
		"\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3"+
		"\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2"+
		"\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2"+
		"[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3"+
		"\2\2\2\2i\3\2\2\2\2k\3\2\2\2\3m\3\2\2\2\5r\3\2\2\2\7y\3\2\2\2\t}\3\2\2"+
		"\2\13\u0085\3\2\2\2\r\u00b1\3\2\2\2\17\u00df\3\2\2\2\21\u00e2\3\2\2\2"+
		"\23\u00ec\3\2\2\2\25\u00ee\3\2\2\2\27\u00f0\3\2\2\2\31\u00f2\3\2\2\2\33"+
		"\u0104\3\2\2\2\35\u010a\3\2\2\2\37\u0119\3\2\2\2!\u0136\3\2\2\2#\u0138"+
		"\3\2\2\2%\u013f\3\2\2\2\'\u0148\3\2\2\2)\u0150\3\2\2\2+\u0156\3\2\2\2"+
		"-\u0158\3\2\2\2/\u0165\3\2\2\2\61\u0171\3\2\2\2\63\u0173\3\2\2\2\65\u0178"+
		"\3\2\2\2\67\u017b\3\2\2\29\u0182\3\2\2\2;\u0187\3\2\2\2=\u018c\3\2\2\2"+
		"?\u0192\3\2\2\2A\u0195\3\2\2\2C\u0199\3\2\2\2E\u019d\3\2\2\2G\u01a3\3"+
		"\2\2\2I\u01a5\3\2\2\2K\u01a7\3\2\2\2M\u01a9\3\2\2\2O\u01ab\3\2\2\2Q\u01ad"+
		"\3\2\2\2S\u01af\3\2\2\2U\u01b1\3\2\2\2W\u01b3\3\2\2\2Y\u01b5\3\2\2\2["+
		"\u01b7\3\2\2\2]\u01b9\3\2\2\2_\u01bb\3\2\2\2a\u01bd\3\2\2\2c\u01bf\3\2"+
		"\2\2e\u01c1\3\2\2\2g\u01c3\3\2\2\2i\u01c5\3\2\2\2k\u01c7\3\2\2\2mn\5\7"+
		"\4\2no\t\2\2\2op\3\2\2\2pq\b\2\2\2q\4\3\2\2\2rs\5\7\4\2st\t\2\2\2t\6\3"+
		"\2\2\2uw\7\17\2\2vu\3\2\2\2vw\3\2\2\2wx\3\2\2\2xz\7\f\2\2yv\3\2\2\2z{"+
		"\3\2\2\2{y\3\2\2\2{|\3\2\2\2|\b\3\2\2\2}\u0081\t\3\2\2~\u0080\t\4\2\2"+
		"\177~\3\2\2\2\u0080\u0083\3\2\2\2\u0081\177\3\2\2\2\u0081\u0082\3\2\2"+
		"\2\u0082\n\3\2\2\2\u0083\u0081\3\2\2\2\u0084\u0086\t\5\2\2\u0085\u0084"+
		"\3\2\2\2\u0085\u0086\3\2\2\2\u0086\u0087\3\2\2\2\u0087\u008e\t\6\2\2\u0088"+
		"\u008a\7a\2\2\u0089\u0088\3\2\2\2\u0089\u008a\3\2\2\2\u008a\u008b\3\2"+
		"\2\2\u008b\u008d\t\6\2\2\u008c\u0089\3\2\2\2\u008d\u0090\3\2\2\2\u008e"+
		"\u008c\3\2\2\2\u008e\u008f\3\2\2\2\u008f\u009a\3\2\2\2\u0090\u008e\3\2"+
		"\2\2\u0091\u0093\7g\2\2\u0092\u0094\t\5\2\2\u0093\u0092\3\2\2\2\u0093"+
		"\u0094\3\2\2\2\u0094\u0096\3\2\2\2\u0095\u0097\t\6\2\2\u0096\u0095\3\2"+
		"\2\2\u0097\u0098\3\2\2\2\u0098\u0096\3\2\2\2\u0098\u0099\3\2\2\2\u0099"+
		"\u009b\3\2\2\2\u009a\u0091\3\2\2\2\u009a\u009b\3\2\2\2\u009b\u00a4\3\2"+
		"\2\2\u009c\u009d\7a\2\2\u009d\u00a1\t\3\2\2\u009e\u00a0\t\7\2\2\u009f"+
		"\u009e\3\2\2\2\u00a0\u00a3\3\2\2\2\u00a1\u009f\3\2\2\2\u00a1\u00a2\3\2"+
		"\2\2\u00a2\u00a5\3\2\2\2\u00a3\u00a1\3\2\2\2\u00a4\u009c\3\2\2\2\u00a4"+
		"\u00a5\3\2\2\2\u00a5\u00ae\3\2\2\2\u00a6\u00a7\7a\2\2\u00a7\u00ab\t\3"+
		"\2\2\u00a8\u00aa\t\7\2\2\u00a9\u00a8\3\2\2\2\u00aa\u00ad\3\2\2\2\u00ab"+
		"\u00a9\3\2\2\2\u00ab\u00ac\3\2\2\2\u00ac\u00af\3\2\2\2\u00ad\u00ab\3\2"+
		"\2\2\u00ae\u00a6\3\2\2\2\u00ae\u00af\3\2\2\2\u00af\f\3\2\2\2\u00b0\u00b2"+
		"\t\5\2\2\u00b1\u00b0\3\2\2\2\u00b1\u00b2\3\2\2\2\u00b2\u00bd\3\2\2\2\u00b3"+
		"\u00ba\t\6\2\2\u00b4\u00b6\7a\2\2\u00b5\u00b4\3\2\2\2\u00b5\u00b6\3\2"+
		"\2\2\u00b6\u00b7\3\2\2\2\u00b7\u00b9\t\6\2\2\u00b8\u00b5\3\2\2\2\u00b9"+
		"\u00bc\3\2\2\2\u00ba\u00b8\3\2\2\2\u00ba\u00bb\3\2\2\2\u00bb\u00be\3\2"+
		"\2\2\u00bc\u00ba\3\2\2\2\u00bd\u00b3\3\2\2\2\u00bd\u00be\3\2\2\2\u00be"+
		"\u00bf\3\2\2\2\u00bf\u00c0\7\60\2\2\u00c0\u00c7\t\6\2\2\u00c1\u00c3\7"+
		"a\2\2\u00c2\u00c1\3\2\2\2\u00c2\u00c3\3\2\2\2\u00c3\u00c4\3\2\2\2\u00c4"+
		"\u00c6\t\6\2\2\u00c5\u00c2\3\2\2\2\u00c6\u00c9\3\2\2\2\u00c7\u00c5\3\2"+
		"\2\2\u00c7\u00c8\3\2\2\2\u00c8\u00d3\3\2\2\2\u00c9\u00c7\3\2\2\2\u00ca"+
		"\u00cc\7g\2\2\u00cb\u00cd\t\5\2\2\u00cc\u00cb\3\2\2\2\u00cc\u00cd\3\2"+
		"\2\2\u00cd\u00cf\3\2\2\2\u00ce\u00d0\t\6\2\2\u00cf\u00ce\3\2\2\2\u00d0"+
		"\u00d1\3\2\2\2\u00d1\u00cf\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2\u00d4\3\2"+
		"\2\2\u00d3\u00ca\3\2\2\2\u00d3\u00d4\3\2\2\2\u00d4\u00dd\3\2\2\2\u00d5"+
		"\u00d6\7a\2\2\u00d6\u00da\t\3\2\2\u00d7\u00d9\t\7\2\2\u00d8\u00d7\3\2"+
		"\2\2\u00d9\u00dc\3\2\2\2\u00da\u00d8\3\2\2\2\u00da\u00db\3\2\2\2\u00db"+
		"\u00de\3\2\2\2\u00dc\u00da\3\2\2\2\u00dd\u00d5\3\2\2\2\u00dd\u00de\3\2"+
		"\2\2\u00de\16\3\2\2\2\u00df\u00e0\7$\2\2\u00e0\u00e1\7$\2\2\u00e1\20\3"+
		"\2\2\2\u00e2\u00e6\t\3\2\2\u00e3\u00e5\t\4\2\2\u00e4\u00e3\3\2\2\2\u00e5"+
		"\u00e8\3\2\2\2\u00e6\u00e4\3\2\2\2\u00e6\u00e7\3\2\2\2\u00e7\u00e9\3\2"+
		"\2\2\u00e8\u00e6\3\2\2\2\u00e9\u00ea\7$\2\2\u00ea\u00eb\7$\2\2\u00eb\22"+
		"\3\2\2\2\u00ec\u00ed\7\"\2\2\u00ed\24\3\2\2\2\u00ee\u00ef\7\"\2\2\u00ef"+
		"\26\3\2\2\2\u00f0\u00f1\7\"\2\2\u00f1\30\3\2\2\2\u00f2\u00f3\7%\2\2\u00f3"+
		"\u00f4\7?\2\2\u00f4\u00ff\3\2\2\2\u00f5\u00f7\13\2\2\2\u00f6\u00f5\3\2"+
		"\2\2\u00f7\u00fa\3\2\2\2\u00f8\u00f6\3\2\2\2\u00f8\u00f9\3\2\2\2\u00f9"+
		"\u00fb\3\2\2\2\u00fa\u00f8\3\2\2\2\u00fb\u00fc\7?\2\2\u00fc\u00fe\7%\2"+
		"\2\u00fd\u00f8\3\2\2\2\u00fe\u0101\3\2\2\2\u00ff\u0100\3\2\2\2\u00ff\u00fd"+
		"\3\2\2\2\u0100\32\3\2\2\2\u0101\u00ff\3\2\2\2\u0102\u0105\5\13\6\2\u0103"+
		"\u0105\5\r\7\2\u0104\u0102\3\2\2\2\u0104\u0103\3\2\2\2\u0105\34\3\2\2"+
		"\2\u0106\u010b\5\17\b\2\u0107\u010b\5\21\t\2\u0108\u010b\5\t\5\2\u0109"+
		"\u010b\5\33\16\2\u010a\u0106\3\2\2\2\u010a\u0107\3\2\2\2\u010a\u0108\3"+
		"\2\2\2\u010a\u0109\3\2\2\2\u010b\36\3\2\2\2\u010c\u010d\7t\2\2\u010d\u010e"+
		"\7g\2\2\u010e\u010f\7c\2\2\u010f\u011a\7f\2\2\u0110\u0111\7t\2\2\u0111"+
		"\u0112\7g\2\2\u0112\u011a\7h\2\2\u0113\u0114\7k\2\2\u0114\u0115\7u\2\2"+
		"\u0115\u011a\7q\2\2\u0116\u0117\7q\2\2\u0117\u0118\7y\2\2\u0118\u011a"+
		"\7p\2\2\u0119\u010c\3\2\2\2\u0119\u0110\3\2\2\2\u0119\u0113\3\2\2\2\u0119"+
		"\u0116\3\2\2\2\u011a \3\2\2\2\u011b\u011c\7r\2\2\u011c\u011d\7t\2\2\u011d"+
		"\u011e\7k\2\2\u011e\u0137\7x\2\2\u011f\u0120\7r\2\2\u0120\u0121\7c\2\2"+
		"\u0121\u0122\7e\2\2\u0122\u0137\7m\2\2\u0123\u0124\7r\2\2\u0124\u0125"+
		"\7t\2\2\u0125\u0126\7q\2\2\u0126\u0137\7f\2\2\u0127\u0128\7t\2\2\u0128"+
		"\u0129\7r\2\2\u0129\u012a\7t\2\2\u012a\u012b\7k\2\2\u012b\u0137\7x\2\2"+
		"\u012c\u012d\7t\2\2\u012d\u012e\7r\2\2\u012e\u012f\7c\2\2\u012f\u0130"+
		"\7e\2\2\u0130\u0137\7m\2\2\u0131\u0132\7t\2\2\u0132\u0133\7r\2\2\u0133"+
		"\u0134\7t\2\2\u0134\u0135\7q\2\2\u0135\u0137\7f\2\2\u0136\u011b\3\2\2"+
		"\2\u0136\u011f\3\2\2\2\u0136\u0123\3\2\2\2\u0136\u0127\3\2\2\2\u0136\u012c"+
		"\3\2\2\2\u0136\u0131\3\2\2\2\u0137\"\3\2\2\2\u0138\u0139\7u\2\2\u0139"+
		"\u013a\7v\2\2\u013a\u013b\7k\2\2\u013b\u013c\7e\2\2\u013c\u013d\7m\2\2"+
		"\u013d\u013e\7{\2\2\u013e$\3\2\2\2\u013f\u0140\7j\2\2\u0140\u0141\7q\2"+
		"\2\u0141\u0142\7n\2\2\u0142\u0143\7f\2\2\u0143&\3\2\2\2\u0144\u0149\7"+
		"?\2\2\u0145\u0146\7?\2\2\u0146\u0149\7<\2\2\u0147\u0149\5)\25\2\u0148"+
		"\u0144\3\2\2\2\u0148\u0145\3\2\2\2\u0148\u0147\3\2\2\2\u0149(\3\2\2\2"+
		"\u014a\u014b\7<\2\2\u014b\u0151\7<\2\2\u014c\u014d\7>\2\2\u014d\u0151"+
		"\7<\2\2\u014e\u014f\7@\2\2\u014f\u0151\7<\2\2\u0150\u014a\3\2\2\2\u0150"+
		"\u014c\3\2\2\2\u0150\u014e\3\2\2\2\u0151*\3\2\2\2\u0152\u0153\7x\2\2\u0153"+
		"\u0154\7c\2\2\u0154\u0157\7t\2\2\u0155\u0157\5-\27\2\u0156\u0152\3\2\2"+
		"\2\u0156\u0155\3\2\2\2\u0157,\3\2\2\2\u0158\u0159\7n\2\2\u0159\u015a\7"+
		"g\2\2\u015a\u015b\7v\2\2\u015b.\3\2\2\2\u015c\u015d\7h\2\2\u015d\u015e"+
		"\7w\2\2\u015e\u015f\7p\2\2\u015f\u0166\7e\2\2\u0160\u0161\7o\2\2\u0161"+
		"\u0162\7c\2\2\u0162\u0163\7v\2\2\u0163\u0164\7e\2\2\u0164\u0166\7j\2\2"+
		"\u0165\u015c\3\2\2\2\u0165\u0160\3\2\2\2\u0166\60\3\2\2\2\u0167\u0168"+
		"\7j\2\2\u0168\u0169\7k\2\2\u0169\u016a\7f\2\2\u016a\u0172\7g\2\2\u016b"+
		"\u016c\7t\2\2\u016c\u016d\7j\2\2\u016d\u016e\7k\2\2\u016e\u016f\7f\2\2"+
		"\u016f\u0172\7g\2\2\u0170\u0172\5!\21\2\u0171\u0167\3\2\2\2\u0171\u016b"+
		"\3\2\2\2\u0171\u0170\3\2\2\2\u0172\62\3\2\2\2\u0173\u0174\7v\2\2\u0174"+
		"\u0175\7{\2\2\u0175\u0176\7r\2\2\u0176\u0177\7g\2\2\u0177\64\3\2\2\2\u0178"+
		"\u0179\7c\2\2\u0179\u017a\7d\2\2\u017a\66\3\2\2\2\u017b\u017c\7o\2\2\u017c"+
		"\u017d\7q\2\2\u017d\u017e\7f\2\2\u017e\u017f\7w\2\2\u017f\u0180\7n\2\2"+
		"\u0180\u0181\7g\2\2\u01818\3\2\2\2\u0182\u0183\7g\2\2\u0183\u0184\7p\2"+
		"\2\u0184\u0185\7w\2\2\u0185\u0186\7o\2\2\u0186:\3\2\2\2\u0187\u0188\7"+
		"n\2\2\u0188\u0189\7q\2\2\u0189\u018a\7q\2\2\u018a\u018b\7r\2\2\u018b<"+
		"\3\2\2\2\u018c\u018d\7y\2\2\u018d\u018e\7j\2\2\u018e\u018f\7k\2\2\u018f"+
		"\u0190\7n\2\2\u0190\u0191\7g\2\2\u0191>\3\2\2\2\u0192\u0193\7k\2\2\u0193"+
		"\u0194\7h\2\2\u0194@\3\2\2\2\u0195\u0196\7h\2\2\u0196\u0197\7q\2\2\u0197"+
		"\u0198\7t\2\2\u0198B\3\2\2\2\u0199\u019a\7v\2\2\u019a\u019b\7t\2\2\u019b"+
		"\u019c\7{\2\2\u019cD\3\2\2\2\u019d\u019e\7e\2\2\u019e\u019f\7c\2\2\u019f"+
		"\u01a0\7v\2\2\u01a0\u01a1\7e\2\2\u01a1\u01a2\7j\2\2\u01a2F\3\2\2\2\u01a3"+
		"\u01a4\7*\2\2\u01a4H\3\2\2\2\u01a5\u01a6\7+\2\2\u01a6J\3\2\2\2\u01a7\u01a8"+
		"\7]\2\2\u01a8L\3\2\2\2\u01a9\u01aa\7_\2\2\u01aaN\3\2\2\2\u01ab\u01ac\7"+
		"}\2\2\u01acP\3\2\2\2\u01ad\u01ae\7\177\2\2\u01aeR\3\2\2\2\u01af\u01b0"+
		"\7<\2\2\u01b0T\3\2\2\2\u01b1\u01b2\7=\2\2\u01b2V\3\2\2\2\u01b3\u01b4\7"+
		"#\2\2\u01b4X\3\2\2\2\u01b5\u01b6\7A\2\2\u01b6Z\3\2\2\2\u01b7\u01b8\7."+
		"\2\2\u01b8\\\3\2\2\2\u01b9\u01ba\7&\2\2\u01ba^\3\2\2\2\u01bb\u01bc\7?"+
		"\2\2\u01bc`\3\2\2\2\u01bd\u01be\7-\2\2\u01beb\3\2\2\2\u01bf\u01c0\7/\2"+
		"\2\u01c0d\3\2\2\2\u01c1\u01c2\7\61\2\2\u01c2f\3\2\2\2\u01c3\u01c4\7\61"+
		"\2\2\u01c4h\3\2\2\2\u01c5\u01c6\7`\2\2\u01c6j\3\2\2\2\u01c7\u01c8\7~\2"+
		"\2\u01c8\u01c9\7~\2\2\u01c9l\3\2\2\2\'\2v{\u0081\u0085\u0089\u008e\u0093"+
		"\u0098\u009a\u00a1\u00a4\u00ab\u00ae\u00b1\u00b5\u00ba\u00bd\u00c2\u00c7"+
		"\u00cc\u00d1\u00d3\u00da\u00dd\u00e6\u00f8\u00ff\u0104\u010a\u0119\u0136"+
		"\u0148\u0150\u0156\u0165\u0171\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}