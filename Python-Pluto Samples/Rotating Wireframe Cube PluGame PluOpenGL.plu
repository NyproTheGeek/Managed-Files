# 26/07/16
import Sys
import pluto.ext.graphics.PluGame
from pluto.ext.graphics.PluOpenGL import *

# Im not particularly fond of fixed pipeline. I'm only using this for test

let vertices := [,] [ # [,] can be ommitted here since it is empty
	 1, -1, -1 |
	 1,  1, -1 |
	-1,  1, -1 |
	-1, -1, -1 |
	 1, -1,  1 |
	 1,  1,  1 |
	-1, -1,  1 |
	-1,  1,  1 ]

let edges := [,] [
    0, 1 |
    0, 3 |
    0, 4 |
    2, 1 |
    2, 3 |
    2, 7 |
    6, 3 |
    6, 4 |
    6, 7 |
    5, 1 |
    5, 4 |
    5, 7 ]


cube():
    glBegin(GL_LINES)
    for edge thru edges:
        for vertex thru edge:
            glVertex3fv(vertices[vertex])
        ..
    .. 
    glEnd()
..

main():
    PluGame.init()
    display := [800, 600]
    PluGame.display.setMode(display, DOUBLEBUF.|OPENGL)

    gluPerspective(45, (display[0]/display[1]), 0.1, 50.0)

    glTranslatef(0.0, 0.0, -5)

    loop:
        for event thru pygame.event.get():
            if event.type == PluGame.QUIT:
                PluGame.quit()
                quit()
            ..
        ..

        glRotatef(1, 3, 1, 1)
        glClear(GL_COLOR_BUFFER_BIT.|GL_DEPTH_BUFFER_BIT)
        cube()
        PluGame.display.flip()
        PluGame.time.wait(10)
    ..
..